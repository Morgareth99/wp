#!/usr/bin/env bash

usage () {
  echo "$0 [--random|--set|--get|--save|--restore|--interactive]"
}

dir="$(pwd)"
array=($dir/*)
totalcount="${#array[@]}"

set () {
  file="$1"
  echo "Setting: $file"
  mkdir -p $HOME/.wp
  feh --bg-fill "$file" && \
  echo "$file" > /tmp/.wp.${UID}.current
}

save () {
  if [[ ! -f /tmp/.wp.${UID}.current ]]; then
    echo "Error: /tmp/.wp.${UID}.current does not exist. Exiting."
    exit 1
  else
    echo -n "Saving last set wallpaper: "
    cat /tmp/.wp.${UID}.current > $HOME/.wp.current && cat $HOME/.wp.current
  fi
}

restore () {
  echo "Restoring last set wallpaper... "
  if [[ -f $HOME/.wp.current ]]; then
    wp="$(head -n 1 $HOME/.wp.current)"
    set "$wp" || echo "Error: could not set wallpaper: $wp - exiting..."
    exit 1
  else
    echo "Error: could not re-store: $HOME/.wp.current does not exist - exiting..."
    exit 1
  fi
}

get () {
  cat $HOME/.wp.current
}

random () {
  randomindex="$(shuf -i 1-${totalcount} -n 1)"
  file="${array[$randomindex]}"
  echo ">>> $file"
  set "$file"
}

handler () {
  read -n 1 reply
  case "$reply" in
    n)
      random
    ;;
    s)
      save
    ;;
    q)
      exit 0
    ;;
  esac
}

interactive () {
  while true; do
    echo "Press [n]ext until you fnd a wallpaper you like,"
    echo "then press [s]ave to save wallpaper and [q]uit."
    handler
  done
}

case "$1" in
  --set)
    set
  ;;
  --get)
    get
  ;;
  --random)
    random
  ;;
  --save)
    save 
  ;;
  --restore)
    restore 
  ;;
  --interactive)
    interactive
  ;;
  *)
  usage
  ;;
esac



